name: CI pipeline

on:
  push:
    branches:
      - 'feature/**'
      - 'main'
env:
  DOCKER_IMAGE_NAME: 'smotw_go_demo'
  GHCR_IMAGE_NAME: 'smotw'

jobs:
  sayHello:
    runs-on: 'ubuntu-latest'

    steps:
      - name: bash to compute
        run: |
          echo "just saying hi"
          ls -la > ./rough
          cat ./rough
  build:
    runs-on: 'ubuntu-latest'
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: build solution
        run: go build -v ./...
  docker_build_and_push:
    runs-on: 'ubuntu-latest'
    needs: build
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: get docker tag
        id: time
        run: echo "TAG=$(date +'%y%m%d%H%M%S')" >> $GITHUB_ENV
      - name: echo the docker image name
        run: echo 'docker image --> ${{ env.DOCKER_IMAGE_NAME }}'
      - name: build docker image
        run: |
          echo 'building docker image ....'
          docker build -t ${{secrets.DOCKER_USERNAME}}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.TAG }} .
      - name: docker push image
        run: |
          echo 'pushing to docker hub'
          docker push ${{secrets.DOCKER_USERNAME}}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.TAG }}
  GHCR_build_and_push:
    runs-on: 'ubuntu-latest'
    needs: build
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: login to GHCR
        run: |
          docker login --username xenon-92 --password ${{secrets.GHCR_PAT}} ghcr.io
      - name: get docker tag
        id: time
        run: echo "TAG=$(date +'%y%m%d%H%M%S')" >> $GITHUB_ENV
      - name: echo the docker image name
        run: echo 'docker image --> ${{ env.DOCKER_IMAGE_NAME }}'
      - name: build GHCR image
        run: |
          docker build -t ghcr.io/xenon-92/${{ env.GHCR_IMAGE_NAME }}:${{ env.TAG }} .
          docker push ghcr.io/xenon-92/${{ env.GHCR_IMAGE_NAME }}:${{ env.TAG }}
      - name: push GHCR image
        run: |
          docker push ghcr.io/xenon-92/${{ env.GHCR_IMAGE_NAME }}:${{ env.TAG }}
  Generate_SDK_and_Github_Publish:
    runs-on: 'ubuntu-latest'
    needs: [GHCR_build_and_push, docker_build_and_push]
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Generate SDK
        run: dotnet tool install --global dotnet-swagger
        id: generate_sdk
      - name: Publish SDK
        run: dotnet swagger to-dotnet --input ./openapi.yaml --output ./generated-sdk
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: sdk-package
          path: ./generated-sdk